#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift/protocol/tprotocol'
require 'thrift/thrift'
require 'std_types'

module STDService
  class Client
    include ThriftClient

    def lookup(lookup)
      send_lookup(lookup)
      return recv_lookup()
    end

    def send_lookup(lookup)
      send_message('lookup', Lookup_args, :lookup => lookup)
    end

    def recv_lookup()
      result = receive_message(Lookup_result)
      return result.success unless result.success.nil?
      raise TApplicationException.new(TApplicationException::MISSING_RESULT, 'lookup failed: unknown result')
    end

  end

  class Processor
    include TProcessor

    def process_lookup(seqid, iprot, oprot)
      args = read_args(iprot, Lookup_args)
      result = Lookup_result.new()
      result.success = @handler.lookup(args.lookup)
      write_result(result, oprot, 'lookup', seqid)
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class Lookup_args
    include ThriftStruct
    attr_accessor :lookup
    FIELDS = {
      1 => {:type => TType::STRING, :name => 'lookup'}
    }
  end

  class Lookup_result
    include ThriftStruct
    attr_accessor :success
    FIELDS = {
      0 => {:type => TType::MAP, :name => 'success', :key => {:type => TType::STRING}, :value => {:type => TType::STRING}}
    }
  end

end

